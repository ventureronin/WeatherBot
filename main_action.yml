name: Weather_Bot_inGCP

on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKER_NAME: ${{ secrets.DOCKER_REPONAME }}
  DOCKER_LOGIN: ${{ secrets.DOCKER_USERNAME }}
  SA_NAME: ${{ secrets.SA_ACCOUNT }}
  REGION: us-central1
  REPO: ventureronin/WeatherBot

jobs:          
  terraform-CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode credentials
        run: |
          echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials.json
          if [ -f "credentials.json" ]; then
            echo "File credentials.json exists"
            chmod 777 credentials.json
          else
            echo "File credentials.json does not exist"
            exit 1
          fi

      - name: Authenticate with Google Cloud
        run: |
          echo "${{ secrets.GCP_PROJECT_ID }}"
          gcloud config set account ${SA_NAME}
          gcloud auth activate-service-account --key-file=credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Check GCP permissions
        run: gcloud auth list

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: terraform init
        run: terraform init

      - name: terraform plan
        id: plan
        run: terraform plan -lock=false -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"

      - name: Get External IP
        id: get_external_ip
        run: |
          external_ip=$(terraform output -raw external_ip)
#          echo "::set-output name=external_ip::$external_ip"
          echo "external_ip=$external_ip >> $GITHUB_OUTPUT

      - name: terraform apply
        if: "!contains(github.event.head_commit.message, 'destroy')"
        run: terraform apply -lock=false -auto-approve -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"

      - name: decode and define tgapi token and opt.json
        run: |
          echo ${{ secrets.TG_PROD_TOKEN }} > config
          echo "${{ secrets.OPT_JSON }}" | base64 -d > opt.json
          if [ -f "opt.json" ]; then
            echo "File opt.json exists"
          else
            echo "File opt.json does not exist"
            exit 1
          fi

      - name: build docker Image
        run: docker build -t ${GITHUB_REF:11} -f Dockerfile .

      - name: definition runners ip
        id: definitionip
        run: |
          runners_ip=$(curl -s ifconfig.me)
          echo "runners_ip=$runners_ip" >> $GITHUB_ENV
          echo "${{ steps.get_external_ip.outputs.external_ip }}"

      - name: SSH into Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.get_external_ip.outputs.external_ip }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ssh -o StrictHostKeyChecking=no $username@$host <<EOF
            scp runner@${{ env.runners_ip }}:${GITHUB_REF:11} .
            docker run ${GITHUB_REF:11}
            EOF

      - name: terraform destroy
        if: contains(github.event.head_commit.message, 'destroy')
        run: terraform destroy -lock=false -auto-approve -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"