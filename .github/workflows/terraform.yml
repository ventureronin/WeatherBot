name: terraform deploy

on:
  push:
    paths:
      - '.github/workflow/terraform.yml'
    branches:
      - main
  workflow_run:
    workflows: build
    types:
      - completed
  workflow_dispatch:

jobs:
  testing-logins:
    name: 'login to GCP&DockerHub'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download container
        run: docker pull ventureronin/tg_weatherbot:latest

      - name: Decode credentials
        run: |
          echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials.json
          if [ -f "credentials.json" ]; then
            echo "File credentials.json exists"
            chmod 777 credentials.json
          else
            echo "File credentials.json does not exist"
            exit 1
          fi

      - name: Authenticate with Google Cloud
        run: |
          echo "${{ secrets.GCP_PROJECT_ID }}"
          gcloud config set account ${{ secrets.SA_ACCOUNT }}
          gcloud auth activate-service-account --key-file=credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Check GCP permissions
        run: gcloud auth list

  Terraform:
    name: 'Terraform set up'
    needs: testing-logins
    runs-on: ubuntu-latest

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan -lock=false -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"

# get external ip?
      - name: Terraform apply
        if: contains(github.event.head_commit.message, 'tf apply')
        run: terraform apply -lock=false -auto-approve -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
        
      - name: Terraform destroy
        if: contains(github.event.head_commit.message, 'tf destroy')
        run: terraform destroy -lock=false -auto-approve -var="GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

